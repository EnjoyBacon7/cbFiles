# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build

on:
  push:
    branches: [ "release" ]

jobs:

  # Building react
  build-npm:
  
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./web/

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './web/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    # To be implemented once tests are added
    #- run: npm test --passWithNoTests

    - name: Archive client build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: ./web/build
    - run: ls

  # Building go code
  build-go:

    needs: build-npm
  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Download client build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build
        path: ./web/build

    - name: Build
      run: |
        mkdir cmd
        GOOS=linux GOARCH=arm64 go build -v -o cmd/cbFiles_linux_arm64 server/main.go
        GOOS=linux GOARCH=amd64 go build -v -o cmd/cbFiles_linux_x64 server/main.go
        GOOS=darwin GOARCH=arm64 go build -v -o cmd/cbFiles_macOS_arm64 server/main.go
        GOOS=darwin GOARCH=amd64 go build -v -o cmd/cbFiles_macOS_x64 server/main.go
        GOOS=windows GOARCH=amd64 go build -v -o cmd/cbFiles_windows_arm64 server/main.go
        GOOS=windows GOARCH=arm go build -v -o cmd/cbFiles_windows_x64 server/main.go

    # To implement once tests are in
    #- name: Test
    #  run: go test -v server main.go

    - name: Archive cmds
      uses: actions/upload-artifact@v2
      with:
        name: cmd
        path: ./cmd
    - run: ls
    

  release:

    needs: build-go
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:

    - name: Download cmds
      uses: actions/download-artifact@v2
      with:
        name: build
        path: ./cmd
    
   - name: Download cmds
      uses: actions/download-artifact@v2
      with:
        name: cmd
        path: ./cmd

    - uses: actions/checkout@v3
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "cmd/*"
        bodyFile: "body.txt"

